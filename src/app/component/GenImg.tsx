'use client';

import React, { useState } from 'react';

export const ImgGen = () => {
    const [prompt, setPrompt] = useState('');
    const [imageUrl, setImageUrl] = useState('');
    const [loading, setLoading] = useState(false);
    const generateImage = async () => {
        const password = window.prompt("Enter the password to generate image");

        if (password !== process.env.NEXT_PUBLIC_PASSWORD) {
            alert("Invalid password");
            return;
        } else {
            setLoading(true);
            setImageUrl('');
            try {
                const response = await fetch('/api/imggen', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ prompt: prompt, size: "1024x1024", n: 1 }),
                });

                const data = await response.json();
                if (data.result) {
                    setImageUrl(data.result);
                } else {
                    alert('Failed to generate image.');
                }
            } catch (error) {
                console.error('Error generating image:', error);
                alert('An error occurred while generating the image.');
            }
            setLoading(false);
        }
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-purple-900 via-slate-800 to-slate-900 flex flex-col items-center justify-center p-6">
            <h1 className="text-4xl font-bold text-white mb-8 animate-fade-in-down">
                DALL-E Image Generator
            </h1>
            <input
                type="text"
                placeholder="Enter your prompt"
                value={prompt}
                onChange={(e) => setPrompt(e.target.value)}
                className="w-full max-w-lg p-4 text-lg text-white bg-gray-800 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500 mb-6 animate-fade-in-up"
            />
            <button
                onClick={generateImage}
                className={`px-8 py-3 text-lg font-semibold text-white bg-purple-600 rounded-lg hover:bg-purple-700 focus:outline-none focus:ring-4 focus:ring-purple-500 transition duration-300 ease-in-out transform hover:scale-105 ${loading ? 'cursor-not-allowed opacity-50' : ''}`}
                disabled={loading || !prompt}
            >
                {loading ? 'Generating...' : 'Generate Image'}
            </button>
            {imageUrl && (
                <div className="mt-10 animate-fade-in-up">
                    <h2 className="text-2xl text-white mb-4">Generated Image:</h2>
                    <img src={imageUrl} alt="Generated by DALL-E" className="w-96 mb-4 h-96 rounded-lg shadow-lg" />
                    <a href={imageUrl} download="filename.jpg" className="inline-block">
                        <button className="px-6 py-3 text-lg font-semibold text-white bg-green-500 rounded-lg shadow-lg hover:bg-green-600 focus:outline-none focus:ring-4 focus:ring-green-300 transition duration-300 ease-in-out">
                            Download Image
                        </button>
                    </a>
                </div>
            )}
        </div>
    );
};
